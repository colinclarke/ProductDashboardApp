{"version":3,"sources":["pages/LandingPage.js","assets/cart.svg","components/Header.js","services/FetchService.js","components/ProductForm.js","pages/ProductFormPage.js","components/ProductTableRow.js","components/ProductTable.js","components/ProductTableHeader.js","pages/ProductListingsPage.js","components/LoginForm.js","pages/Login.js","components/CreateNewUser.js","pages/CreateNewUserPage.js","components/CartContents.js","pages/CartPage.js","pages/App.js","reportWebVitals.js","index.js"],"names":["LandingPage","useState","localStorage","getItem","isLoggedIn","setIsLoggedIn","className","href","onClick","removeItem","Header","style","backgroundColor","type","src","cart","alt","requestOptions","mode","headers","getJwtToken","user","JSON","parse","token","FetchService","GetProducts","Authorization","method","body","fetch","process","NewProduct","name","quantity","price","category","stringify","product","EditProduct","id","DeleteProduct","NewUser","username","password","roles","AddProductToCart","uid","pid","productId","LoginRequest","Username","GetCart","userid","DeleteProductFromCart","productid","ProductForm","pc","productExists","setName","setQuantity","setPrice","setCategory","history","useHistory","productIdFormGroup","Form","Group","controlId","Label","Control","value","readOnly","onSubmit","event","then","response","ok","Error","json","push","catch","error","console","preventDefault","onChange","target","Button","variant","ProductFormPage","useParams","useFetch","depends","isLoading","data","ProductTableRow","update","setAlert","isAdmin","includes","isUser","isManager","toFixed","min","max","e","a","Promise","r","setTimeout","ProductTable","props","setPc","getProducts","useEffect","map","p","i","ProductTableHeader","alert","Alert","show","dismissible","onClose","ProductListingsPage","cartAlert","setCartAlert","LoginForm","Login","details","setDetails","placeholder","passowrd","setUser","setError","setItem","CreateNewUser","setUsername","setPassword","allRoles","setRoles","roleCheckboxes","role","Check","label","filter","createNewUserPage","CartContents","totalPrice","getCart","cartItemList","cartItem","scope","handleDelete","length","color","fontWeight","Math","round","CartPage","setCart","setTotalPrice","useCallback","t","log","axios","post","amount","stripeKey","App","path","CreateNewUserPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdf04dc2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction LandingPage() {\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem(\"user\") !== null);\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"user\");\r\n    setIsLoggedIn(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <title>Product Dashboard</title>\r\n      <br />\r\n      <div className=\"container col-md-5\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Product Dashboard</h5>\r\n            <p className=\"card-text\">\r\n              This simple application allows users to perform Create,\r\n              Read, Update, and Delete (CRUD) methods on a set of products.\r\n              Only admins can update the price of items.\r\n            </p>\r\n            <div className=\"d-flex justify-content-around\">\r\n              <a href=\"/products\" className=\"btn btn-primary\">Go to dashboard</a>\r\n              { isLoggedIn ?\r\n                <button onClick={logout} className=\"btn btn-primary\">Logout</button> :\r\n                <a href=\"/login\" className=\"btn btn-primary\">Login</a>\r\n              }\r\n              <a href=\"/createnewuser\" className=\"btn btn-primary\">Create new user</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;","export default __webpack_public_path__ + \"static/media/cart.05dfd14f.svg\";","import React from 'react';\r\nimport cart from '../assets/cart.svg';\r\n\r\nfunction Header({isLoggedIn}) {\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-md navbar-dark\" style={{backgroundColor: 'tomato'}}>\r\n                <div className=\"navbar-collapse collapse w-100 order-1 order-md-0 dual-collapse2\">\r\n                    <ul className=\"navbar-nav me-auto\">\r\n                        <li><a href=\"/products\" className=\"nav-link mx-3\">Products</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"mx-auto order-0\">\r\n                    <a className=\"navbar-brand mx-auto\" href=\"/\">Product CRUD App</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".dual-collapse2\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                    <ul className=\"navbar-nav ms-auto\">\r\n                        { isLoggedIn ? \r\n                        <li className=\"nav-item me-3\">\r\n                            <a className=\"nav-link\" href=\"/cart\"><img src={cart} alt=\"cart logo\" className=\"mx-3\"/>Cart</a>\r\n                        </li>\r\n                        :\r\n                        <li className=\"nav-item me-3\">\r\n                            <a href=\"/login\" className=\"btn btn-secondary\">Login</a>\r\n                        </li>\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\t    </header>\r\n    );\r\n}\r\n\r\nexport default Header;","const requestOptions = {\r\n    mode: 'cors',\r\n    headers: { 'Content-Type': 'application/json' },\r\n};\r\n\r\nfunction getJwtToken() {\r\n    let user = localStorage.getItem(\"user\");\r\n    if (user !== null) {\r\n        return 'Bearer '+JSON.parse(user).token;\r\n    }\r\n    return '';\r\n}\r\n\r\nconst FetchService = {\r\n    GetProducts: () => {\r\n        delete requestOptions.headers.Authorization;\r\n        requestOptions.method = 'GET';\r\n        delete requestOptions.body;\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/products', requestOptions);\r\n    },\r\n    NewProduct: (name, quantity, price, category) => {\r\n        requestOptions.headers.Authorization = getJwtToken();\r\n        requestOptions.method = 'POST';\r\n        requestOptions.body = JSON.stringify({\r\n            product: {\r\n                name: name,\r\n                quantity: quantity,\r\n                price: price\r\n            },\r\n            category: {\r\n                name: category\r\n            }\r\n        });\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/products/new', requestOptions);\r\n    },\r\n    EditProduct: (id, name, quantity, price, category) => {\r\n        requestOptions.headers.Authorization = getJwtToken();\r\n        requestOptions.method = 'PUT';\r\n        requestOptions.body = JSON.stringify({\r\n            product: {\r\n                id: id,\r\n                name: name,\r\n                quantity: quantity,\r\n                price: price\r\n            },\r\n            category: {\r\n                name: category\r\n            }\r\n        });\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/products/edit/'+id, requestOptions);\r\n    },\r\n    DeleteProduct: (id) => {\r\n        requestOptions.headers.Authorization = getJwtToken();\r\n        requestOptions.method = 'DELETE';\r\n        delete requestOptions.body;\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/products/delete/'+id, requestOptions);\r\n    },\r\n    NewUser: (username, password, roles) => {\r\n        requestOptions.method = 'POST';\r\n        requestOptions.body = JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n                roles: roles\r\n        });\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/create-new-user', requestOptions);\r\n    },\r\n    AddProductToCart: (uid, pid, quantity) => {\r\n        requestOptions.headers.Authorization = getJwtToken();\r\n        requestOptions.method = 'POST';\r\n        requestOptions.body = JSON.stringify({\r\n            productId: pid,\r\n            quantity: quantity\r\n        });\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/cart/'+uid, requestOptions);\r\n    },\r\n    LoginRequest: (Username, password) => {\r\n        requestOptions.method = 'POST';\r\n        requestOptions.body = JSON.stringify({\r\n            username: Username,\r\n            password: password,\r\n        });\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/auth/authenticate', requestOptions);\r\n    },\r\n    GetCart: (userid) => {\r\n        requestOptions.headers.Authorization = getJwtToken();\r\n        requestOptions.method = 'GET';\r\n        delete requestOptions.body;\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/cart/'+userid, requestOptions);\r\n    },\r\n    DeleteProductFromCart: (userid, productid) => {\r\n        requestOptions.headers.Authorization = getJwtToken();\r\n        requestOptions.method = 'DELETE';\r\n        delete requestOptions.body;\r\n        return fetch(process.env.REACT_APP_BASE_API_URL+'/cart/'+userid+'/product/'+productid, requestOptions);\r\n    }\r\n}\r\n\r\nexport default FetchService;","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button } from 'react-bootstrap';\r\nimport FetchService from '../services/FetchService';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction ProductForm({pc}) {\r\n    const productExists = typeof pc !== 'undefined';\r\n    const [name, setName] = useState(productExists ? pc.product.name : '');\r\n    const [quantity, setQuantity] = useState(productExists ? pc.product.quantity : '');\r\n    const [price, setPrice] = useState(productExists ? pc.product.price : '');\r\n    const [category, setCategory] = useState(productExists ? pc.category.name : '');\r\n    const history = useHistory();\r\n\r\n    function onSubmit(event) {\r\n        let promise = productExists ? \r\n            FetchService.EditProduct(pc.product.id, name, quantity, price, category) :\r\n            FetchService.NewProduct(name, quantity, price, category);\r\n        promise\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(() => history.push(\"/products\"))\r\n            .catch(error => {\r\n                console.error('There has been a problem with your fetch operation:', error);\r\n            });\r\n        event.preventDefault();\r\n    }\r\n\r\n    let productIdFormGroup = (\r\n        <Form.Group className=\"mb-3\" controlId=\"productId\">\r\n            <Form.Label>Product Id</Form.Label>\r\n            <Form.Control type=\"text\" value={productExists && pc.product.id} readOnly/>\r\n        </Form.Group>\r\n    );\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n\r\n            {productExists && productIdFormGroup}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productName\">\r\n                <Form.Label>Product Name</Form.Label>\r\n                <Form.Control type=\"text\" value={name} onChange={(event) => setName(event.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productQuantity\">\r\n                <Form.Label>Product Quantity</Form.Label>\r\n                <Form.Control type=\"text\" value={quantity} onChange={(event) => setQuantity(event.target.value)} />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productPrice\">\r\n                <Form.Label>Product Price</Form.Label>\r\n                <Form.Control type=\"text\" value={price} onChange={(event) => setPrice(event.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"productCategory\">\r\n                <Form.Label>Product Category</Form.Label>\r\n                <Form.Control type=\"text\" value={category} onChange={(event) => setCategory(event.target.value)}/>\r\n            </Form.Group>\r\n\r\n            <div className=\"d-flex justify-content-around\">\r\n                <Button variant=\"danger\" type=\"button\" href=\"/products\">Cancel</Button>\r\n                <Button variant=\"success\" type=\"submit\">Save</Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default ProductForm;","import React from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport ProductForm from '../components/ProductForm';\r\nimport useFetch from 'react-fetch-hook';\r\n\r\nfunction ProductFormPage() {\r\n    const {pid} = useParams();\r\n    const history = useHistory();\r\n    let user = localStorage.getItem(\"user\");\r\n    const { isLoading, data, error } = useFetch(process.env.REACT_APP_BASE_API_URL+'/products/'+pid, {\r\n        headers: {Authorization: user !== null ? 'Bearer '+JSON.parse(user).token : ''},\r\n        depends: [typeof pid !== 'undefined']\r\n    });\r\n\r\n    if (error) {\r\n        history.push(\"/products\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header isLoggedIn={user !== null}/>\r\n            <br/>\r\n            <div className='container col-md-5'>\r\n                <h2>{typeof pid == 'undefined' ? 'New Product' : 'Edit Product '+pid}</h2>\r\n                {!isLoading && <ProductForm pc={data} />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductFormPage;","import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport FetchService from '../services/FetchService';\r\n\r\nfunction ProductTableRow({pc, update, setAlert}) {\r\n\r\n    const [quantity, setQuantity] = useState(1);\r\n    const history = useHistory();\r\n    const user = localStorage.getItem(\"user\");\r\n    const isAdmin = user !== null && JSON.parse(user).roles.includes('ROLE_ADMIN');\r\n    const isUser = user !== null && JSON.parse(user).roles.includes('ROLE_USER');\r\n    const isManager = user !== null && JSON.parse(user).roles.includes('ROLE_MANAGER');\r\n\r\n    function handleDelete() {\r\n        FetchService.DeleteProduct(pc.product.id).then(() => update()).catch(error => console.error(error));\r\n    }\r\n\r\n    function handleAddToCart() {\r\n        if (user === null) {\r\n            history.push(\"/login\");\r\n        } else {\r\n            FetchService.AddProductToCart(JSON.parse(user).id, pc.product.id, quantity)\r\n                .then(async response => {\r\n                    if (!response.ok) {\r\n                        throw new Error('Network response was not ok');\r\n                    }\r\n                    setAlert(true);\r\n                    await new Promise(r => setTimeout(r, 2000));\r\n                    setAlert(false);\r\n                })\r\n                .catch(error => console.error(error));\r\n            setQuantity(1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{pc.product.id}</td>\r\n            <td>{pc.product.name}</td>\r\n            <td>{pc.category.name}</td>\r\n            <td>{pc.product.quantity}</td>\r\n            <td>${pc.product.price}</td>\r\n            <td>${(pc.product.quantity*pc.product.price).toFixed(2)}</td>\r\n            <td>\r\n                <div className=\"d-flex justify-content-around\">\r\n                    { ((!isAdmin && !isManager) || isUser) && \r\n                        <form>\r\n                            <input className=\"mx-3\" type=\"number\" min=\"1\" max={pc.product.quantity} value={quantity} onChange={(e) => setQuantity(e.target.value)}/>\r\n                            <Button variant=\"primary\" onClick={handleAddToCart}>Add to cart</Button>\r\n                        </form> \r\n                    }\r\n                    { (isAdmin || isManager) && <Button variant=\"secondary\" href={\"/products/edit/\"+pc.product.id}>Edit</Button> }\r\n                    { isAdmin && <Button variant=\"danger\" onClick={handleDelete}>Delete</Button> }\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ProductTableRow;","import React, { useState, useEffect } from 'react';\r\nimport FetchService from '../services/FetchService';\r\nimport ProductTableRow from './ProductTableRow';\r\n\r\nfunction ProductTable(props) {\r\n\r\n    const [pc, setPc] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    },[]);\r\n\r\n    async function getProducts() {\r\n        FetchService.GetProducts()\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => setPc(data))\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-bordered\">\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Category</th>\r\n                    <th>Quantity</th>\r\n                    <th>Price</th>\r\n                    <th>Subtotal</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {pc.map((p, i) => <ProductTableRow \r\n                    key={i} \r\n                    pc={p} \r\n                    update={getProducts} \r\n                    setAlert={props.setAlert}/>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default ProductTable;","import React from 'react';\r\nimport { Alert, Button } from 'react-bootstrap';\r\n\r\nfunction ProductTableHeader({alert, setAlert}) {\r\n\r\n    const isAdmin = (localStorage.getItem(\"user\") !== null) && JSON.parse(localStorage.getItem(\"user\")).roles.includes(\"ROLE_ADMIN\");\r\n\r\n    return (\r\n        <div className=\"my-3\">\r\n            <Alert variant=\"success\" show={alert} dismissible onClose={()=>setAlert(false)}>\r\n                <div className=\"d-flex justify-content-center\">Item added to cart</div>\r\n            </Alert>\r\n            <div className=\"my-3 d-flex justify-content-start\">\r\n                {isAdmin && \r\n                    <Button variant=\"success\" href=\"/products/add\">Add New Product</Button>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductTableHeader;","import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport ProductTable from '../components/ProductTable';\r\nimport ProductTableHeader from '../components/ProductTableHeader';\r\n\r\nfunction ProductListingsPage() {\r\n    const user = localStorage.getItem(\"user\");\r\n    const [cartAlert, setCartAlert] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Header isLoggedIn={user !== null}/>\r\n            <div className=\"container\">\r\n                <ProductTableHeader alert={cartAlert} setAlert={setCartAlert}/>\r\n                <ProductTable setAlert={setCartAlert}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductListingsPage;","import React, {useState} from 'react'\r\n\r\nfunction LoginForm({Login,error}) {\r\n    const [details, setDetails] = useState({username: \"\", password: \"\"});\r\n\r\n    const submitHandler= e => {\r\n        e.preventDefault();\r\n        Login(details);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}> \r\n        {(error !==\"\") ? (<div className=\"error\">{error} </div> ) : \"\"}\r\n        <div className=\"simple-login-container\">\r\n          <h2>Login Form</h2>\r\n          <div className=\"row my-3\">\r\n            <div className=\"col-md-12 form-group\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange ={e => setDetails({...details, username: e.target.value})}value={details.username} />\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-3\">\r\n            <div className=\"col-md-12 form-group\">\r\n              <input type=\"password\" placeholder=\"Enter your Password\" className=\"form-control\" onChange ={e => setDetails({...details, password: e.target.value})}value={details.passowrd} />\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-3\">\r\n            <div className=\"col-md-12 form-group d-flex justify-content-around\">\r\n              <a href=\"/\" className=\"btn btn-danger\">Cancel</a>\r\n              <input type=\"submit\" className=\"btn btn-block btn-success\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n      </form>\r\n    );\r\n  }\r\n\r\n\r\nexport default LoginForm;","import React, {useState} from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport LoginForm from '../components/LoginForm';\r\nimport FetchService from '../services/FetchService';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n\r\n    const [user, setUser] = useState(localStorage.getItem(\"user\"));\r\n    const [error, setError] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const Login = details => {\r\n        FetchService.LoginRequest(details.username, details.password)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                localStorage.setItem(\"user\", JSON.stringify(data));\r\n                setUser(data);\r\n                history.push(\"/products\");\r\n            })\r\n            .catch(error => {\r\n                console.error('There has been a problem with your fetch operation:', error);\r\n                setError(\"Incorrect username or password\");\r\n            });\r\n    }\r\n\r\n    \r\n\r\n    const Logout = () => {\r\n        localStorage.removeItem(\"user\");\r\n        setUser(null);\r\n    }\r\n\r\n    return (\r\n        <div className= \"Login\">\r\n           {(user !== null) ? (\r\n            <div className= \"welcome\">\r\n                <h2> Welcome, <span> {user.username}</span></h2>\r\n                <button onClick={Logout}> Logout </button>\r\n                </div>\r\n           ) : (\r\n               <LoginForm  Login={Login} error = {error}/>\r\n           )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useHistory } from 'react-router';\r\nimport FetchService from '../services/FetchService';\r\n\r\nfunction CreateNewUser() {\r\n    \r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const allRoles = [\"ROLE_USER\", \"ROLE_ADMIN\", \"ROLE_MANAGER\"];\r\n    const [roles, setRoles] = useState([]);\r\n    const history = useHistory();\r\n    const isAdmin = (localStorage.getItem(\"user\") !== null) && JSON.parse(localStorage.getItem(\"user\")).roles.includes(\"ROLE_ADMIN\");\r\n\r\n    let roleCheckboxes = [];\r\n    for (let i in allRoles) {\r\n        let role = allRoles[i];\r\n        roleCheckboxes.push(\r\n            <Form.Check type=\"checkbox\" value={role} label={role} key={i} id={i}\r\n                onChange={()=> {\r\n                    if (roles.includes(role)) {\r\n                        setRoles(roles.filter(e => e !== role))\r\n                    } else {\r\n                        roles.push(role);\r\n                        setRoles(roles);\r\n                    }\r\n                }}/>\r\n        );\r\n    };\r\n    \r\n    function onSubmit(event) {\r\n        let promise = FetchService.NewUser(username, password, roles);\r\n\r\n        promise\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Response not ok!')\r\n                }\r\n                if (isAdmin) {\r\n                    history.push(\"/\");\r\n                } else {\r\n                    history.push(\"/login\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('There has been a problem with your fetch operation:', error);\r\n            });\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"username\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control type = \"text\" value = {username} onChange={(event)=> setUsername(event.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type = \"password\" value = {password} onChange={(event)=> setPassword(event.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            { isAdmin &&\r\n            <Form.Group className=\"mb-3\" controlId=\"roles\">\r\n                <Form.Label>Roles</Form.Label>\r\n                {roleCheckboxes}\r\n            </Form.Group>\r\n            }\r\n\r\n            <div className=\"d-flex justify-content-around\">\r\n               <a href=\"/landingPage\" className=\"btn btn-danger\">Cancel</a> \r\n                <input type=\"submit\" className=\"btn btn-success\" value=\"Save\"/>\r\n            </div>\r\n        </Form>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default CreateNewUser;","import React from 'react';\r\nimport CreateNewUser from '../components/CreateNewUser';\r\n\r\nfunction createNewUserPage() {\r\n\r\n    return (\r\n        <div className=\"container col-md-5\">\r\n            <h1>Create a new User!</h1>\r\n            <CreateNewUser/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default createNewUserPage;","import React from 'react';\r\nimport FetchService from '../services/FetchService';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction CartContents({cart, totalPrice, getCart}) {\r\n\r\n    function handleDelete(productid) {\r\n        let user = localStorage.getItem(\"user\");\r\n        if (user === null) return;\r\n        FetchService.DeleteProductFromCart(JSON.parse(user).id, productid)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                getCart();\r\n            })\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    const cartItemList = [];\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let cartItem = cart[i];\r\n        cartItemList.push(\r\n            <tr key={i}>\r\n                <td>{i+1}</td>\r\n                <th scope=\"row\">{cartItem.product.name}</th>\r\n                <td>{cartItem.quantity}</td>\r\n                <td>${cartItem.product.price}</td>\r\n                <td>${(cartItem.quantity*cartItem.product.price).toFixed(2)}</td>\r\n                <td>\r\n                    <Button variant=\"danger\" onClick={() => handleDelete(cartItem.product.id)}>Delete</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"my-3\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\"></th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Quantity</th>\r\n                    <th scope=\"col\">Price</th>\r\n                    <th scope=\"col\">Subtotal</th>\r\n                    <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {cartItemList}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <h3 style={{color: 'green', fontWeight: 'bold'}}>${(Math.round(totalPrice * 100) / 100).toFixed(2)}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartContents;","import React, {useState, useEffect, useCallback} from 'react';\r\nimport Stripe from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport CartContents from '../components/CartContents';\r\nimport Header from '../components/Header';\r\nimport FetchService from '../services/FetchService';\r\n\r\nfunction CartPage() {\r\n\r\n    const history = useHistory();\r\n    const user = localStorage.getItem('user') === null ? null : JSON.parse(localStorage.getItem('user'));\r\n    const [cart, setCart] = useState([]);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    const getCart = useCallback(async () => {\r\n        FetchService.GetCart(user.id)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setCart(data);\r\n                setTotalPrice(0);\r\n                for (let i in data) {\r\n                    let cartItem = data[i];\r\n                    setTotalPrice(t => t + (cartItem.product.price*cartItem.quantity));\r\n                }\r\n            })\r\n            .catch(error => console.error(error));\r\n    }, [user.id]);\r\n\r\n    useEffect(() => {\r\n        getCart();\r\n    },[getCart]);\r\n\r\n    async function handleToken(token) {\r\n        console.log(token);\r\n        await axios.post(process.env.REACT_APP_BASE_API_URL+\"/payment/charge\", \"\", {headers: {\r\n            Authorization: \"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).token,\r\n            token: token.id,\r\n            amount: totalPrice,\r\n            userid: user.id\r\n        },})\r\n        .then(() => {\r\n            alert(\"Payment Success\");\r\n            history.push(\"/products\");\r\n        })\r\n        .catch((error) => {\r\n           alert(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header isLoggedIn={user !== null}/>\r\n            <div className=\"container col-md-5\">\r\n                <h2 className=\"my-3\">Checkout</h2>\r\n                <div>\r\n                    <CartContents cart={cart} totalPrice={totalPrice} getCart={getCart} />\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Stripe\r\n                        stripeKey=\"pk_test_51JPKxyG8YVxXlobJkSvbwGXNpZk1I00iw4PzpdUdC5sWTiqkfOr9pmHTkFrNvhURV90F9O6o7WipZWhAPVwz2Yva00iAQt1xZ4\"\r\n                        token={handleToken}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartPage;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport LandingPage from './LandingPage';\r\nimport ProductFormPage from './ProductFormPage';\r\nimport ProductListingsPage from './ProductListingsPage';\r\nimport Login from './Login';\r\nimport CreateNewUserPage from './CreateNewUserPage'\r\nimport CartPage from './CartPage';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/products/add\">\r\n                    <ProductFormPage/>\r\n                </Route>\r\n                <Route path=\"/products/edit/:pid\">\r\n                    <ProductFormPage/>\r\n                </Route>\r\n                <Route path=\"/products\">\r\n                    <ProductListingsPage/>\r\n                </Route>\r\n                <Route path=\"/Login\">\r\n                    <Login/>\r\n                </Route>\r\n                <Route path = \"/createNewUser\">\r\n                    <CreateNewUserPage/>\r\n                </Route>\r\n                <Route path=\"/cart\">\r\n                    <CartPage/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <LandingPage/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './pages/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}